# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  winbuild:
    name: Build for Windows (VS_2010)
    runs-on: windows-2016
#    env:
#      SOLUTION_FILE_PATH: RecStrip_VS/RecStrip.sln

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1
#      with:
#        vs-version: '[10.0,10.1)'
       
#    - name: Install vcexpress2010
#      run: choco install vcexpress2010
#
#    - name: Install Visual C++ 2010 Service Pack 1 Compiler Update
#      run: choco install kb2519277

    - name: Run Windows SDK 7.1 installer
      run: Start-Process msiexec.exe -Wait -ArgumentList '/I install\WinSDKBuild\WinSDKBuild_x86.msi /quiet'

    - name: Run C Compiler x86 installer
      run: Start-Process msiexec.exe -Wait -ArgumentList '/I install\vc_stdx86\vc_stdx86.msi /quiet'

    - name: Run C Compiler x64 installer
      run: Start-Process msiexec.exe -Wait -ArgumentList '/I install\vc_stdx64\vc_stdx64.msi /quiet'

    - name: Download & extract Microsoft Windows SDK 7.1
      run: |
        Expand-Archive -Path "WindowsSDK_7.1.zip" -DestinationPath "C:\Program Files (x86)\Microsoft SDKs\Windows\"
#        Invoke-WebRequest -Uri "https://my.hidrive.com/api/file?attachment=true&pid=b1605985184.114&access_token=G5QDMZJicCSp1YrK1eGr" -UseBasicParsing -OutFile WindowsSDK_7.1.zip

    - name: Download & extract Microsoft VC 2010 Compilers
      run: |
        Expand-Archive -Path "Compilers_2010_x86_x64.zip" -DestinationPath "C:\Program Files (x86)\Microsoft Visual Studio 10.0\"
        copy vcvars32.bat "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\"
        copy vcvars64.bat "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64\"
#        Invoke-WebRequest -Uri "https://my.hidrive.com/api/file?attachment=true&pid=b1605985184.120&access_token=G5QDMZJicCSp1YrK1eGr" -UseBasicParsing -OutFile Compilers_2010_x86_x64.zip
#        Invoke-WebRequest -Uri "https://my.hidrive.com/api/file?attachment=true&pid=b1605985184.117&access_token=G5QDMZJicCSp1YrK1eGr" -UseBasicParsing -OutFile "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\vcvars32.bat"
#        Invoke-WebRequest -Uri "https://my.hidrive.com/api/file?attachment=true&pid=b1605985184.118&access_token=G5QDMZJicCSp1YrK1eGr" -UseBasicParsing -OutFile "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64\vcvars64.bat"

    - name: Download & extract MSBuild config
      run: |
        Expand-Archive -Path "MSBuild_x86.zip" -DestinationPath "C:\Program Files (x86)\MSBuild\"
#        Invoke-WebRequest -Uri "https://my.hidrive.com/api/file?attachment=true&pid=b1605985184.113&access_token=G5QDMZJicCSp1YrK1eGr" -UseBasicParsing -OutFile MSBuild_x86.zip

    - name: Setup Environment x86
      run: |
        echo "{C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE}" >> $GITHUB_PATH
        echo "{C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\BIN}" >> $GITHUB_PATH
        echo "{C:\Windows\Microsoft.NET\Framework\v4.0.30319}" >> $GITHUB_PATH
        echo "{LIB}={C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\lib}" >> $LIB
        echo "{LIB}={%LIB%;C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1\Lib}" >> $LIB
        echo "{LIB}={%LIB%;C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Lib}" >> $LIB
        echo "{INCLUDE}={C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include;%INCLUDE%}" >> $INCLUDE
          
#    - name: Initialize VCTools x86
#      run: call "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" x86
#      shell: cmd

    - name: Build x86
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        set
        "C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe" /m /p:Configuration=Release /p:Platform=Win32 RecStrip_VS\RecStrip.sln
        mv RecStrip_VS/Release/RecStrip.exe RecStrip_VS/Release/RecStrip_Win32.exe
      shell: cmd

    - name: Setup Environment x64
      run: |
        echo "{C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE}" >> $GITHUB_PATH
        echo "{C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\BIN}" >> $GITHUB_PATH
        echo "{C:\Windows\Microsoft.NET\Framework\v4.0.30319}" >> $GITHUB_PATH
        echo "{LIB}={C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\lib\amd64}" >> $LIB
        echo "{LIB}={%LIB%;C:\Program Files\Microsoft SDKs\Windows\v7.1\Lib\x64}" >> $LIB
        echo "{LIB}={%LIB%;C:\Program Files\Microsoft SDKs\Windows\v7.0A\Lib\x64}" >> $LIB
        echo "{INCLUDE}={C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include;%INCLUDE%}" >> $INCLUDE

    - name: Initialize VCTools x64
      run: call "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" x86_amd64
      shell: cmd
    
    - name: Build x64
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        msbuild /m /p:Configuration=Release /p:Platform=x64 ${{env.SOLUTION_FILE_PATH}}
        mv RecStrip_VS/x64/Release/RecStrip.exe RecStrip_VS/x64/Release/RecStrip_x64.exe

    - name: Copy build artefact
      uses: actions/upload-artifact@v2
      with:
        name: RecStrip_WindowsXP
        path: |
          ${{ github.workspace }}/RecStrip_VS/Release/RecStrip_Win32.exe
          ${{ github.workspace }}/RecStrip_VS/x64/Release/RecStrip_x64.exe
